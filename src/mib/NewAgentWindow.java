/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib;

import java.awt.Component;
import java.awt.Container;
import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import oru.inf.*;

/**
 *
 * @author sbf
 */
public class NewAgentWindow extends javax.swing.JFrame {

    private static InfDB idb;

    /**
     * Creates new form PasswordWindow
     */
    public NewAgentWindow(InfDB idb) {

        initComponents();
        this.idb = idb;
        fillcb();
    }

    private void fillcb() {

        cbLocationMngr.addItem("Ej chef");
        String Location = "SELECT BENAMNING FROM OMRADE";
        ArrayList<String> allLocation;
        try {
            allLocation = idb.fetchColumn(Location);
            for (String name : allLocation) {
                cbLocation.addItem(name);
                cbLocationMngr.addItem(name);
            }
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Ett fel inträffade!" + e);
        }
        cbLocation.setSelectedIndex(-1);
        cbLocationMngr.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAgent = new javax.swing.JPanel();
        cbLocation = new javax.swing.JComboBox<>();
        textFieldName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        labelAgent = new javax.swing.JLabel();
        labelPhone = new javax.swing.JLabel();
        cbLocationMngr = new javax.swing.JComboBox<>();
        labelArea = new javax.swing.JLabel();
        labelUsername = new javax.swing.JLabel();
        labelNewPassword = new javax.swing.JLabel();
        buttonRegisterNewAgent = new javax.swing.JButton();
        imageAgent = new javax.swing.JLabel();
        labelRegistration = new javax.swing.JLabel();
        datePicker2 = new com.github.lgooddatepicker.components.DatePicker();
        rbAdmin = new javax.swing.JRadioButton();
        RBOffMngr = new javax.swing.JRadioButton();
        rbFieldagent = new javax.swing.JRadioButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelAgent.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelAgent.setText("Områdeschef");

        labelPhone.setText("Telefon");

        labelArea.setText("Tillhörande område");

        labelUsername.setText("Namn");

        labelNewPassword.setText("Lösenord");

        buttonRegisterNewAgent.setText("Registrera");
        buttonRegisterNewAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRegisterNewAgentActionPerformed(evt);
            }
        });

        imageAgent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mib/agent.png"))); // NOI18N

        labelRegistration.setText("Anställningsdatum");

        rbAdmin.setText("Administratör");

        RBOffMngr.setText("Kontorschef");
        RBOffMngr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBOffMngrActionPerformed(evt);
            }
        });

        rbFieldagent.setText("Fältagent");

        javax.swing.GroupLayout panelAgentLayout = new javax.swing.GroupLayout(panelAgent);
        panelAgent.setLayout(panelAgentLayout);
        panelAgentLayout.setHorizontalGroup(
            panelAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgentLayout.createSequentialGroup()
                .addGroup(panelAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonRegisterNewAgent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelAgentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAgentLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(panelAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelRegistration)
                                    .addGroup(panelAgentLayout.createSequentialGroup()
                                        .addComponent(labelUsername)
                                        .addGap(73, 73, 73)
                                        .addComponent(imageAgent))
                                    .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPassword)
                                    .addComponent(labelNewPassword)
                                    .addComponent(cbLocation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelAgent, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbLocationMngr, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPhone)
                                    .addComponent(datePicker2, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                                    .addComponent(labelArea)))
                            .addGroup(panelAgentLayout.createSequentialGroup()
                                .addGroup(panelAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbAdmin)
                                    .addComponent(RBOffMngr))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(panelAgentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbFieldagent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAgentLayout.setVerticalGroup(
            panelAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAgentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAgentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelUsername)
                    .addComponent(imageAgent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelNewPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(labelRegistration)
                .addGap(18, 18, 18)
                .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rbAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RBOffMngr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbFieldagent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelArea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelAgent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbLocationMngr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(buttonRegisterNewAgent, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        textFieldName.getAccessibleContext().setAccessibleName("");

        btnBack.setText("Tillbaka");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelAgent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelAgent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void buttonRegisterNewAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRegisterNewAgentActionPerformed

        if (Validation.isNotEmpty(textFieldName, txtPassword, txtPhone) && Validation.ifCBEmpty(cbLocation,cbLocationMngr) && Validation.ifDatePickerEmpty(datePicker2)) {

            // Hämtar in alla nödvändiga textfält från användaren.
            String anstdatum = datePicker2.getDateStringOrEmptyString();
            String name = textFieldName.getText();
            String telephone = txtPhone.getText();
            String password = txtPassword.getText();
            String admin = "";
            String LocMn = cbLocationMngr.getSelectedItem().toString();
            ArrayList<String> Loc = new ArrayList<String>(4);
            Loc.add("Svealand");
            Loc.add("Gotaland");
            Loc.add("Norrland");

            try {
                String fetchAutoId = idb.getAutoIncrement("AGENT", "AGENT_ID");
                int autoId = Integer.parseInt(fetchAutoId);
                String Area = idb.fetchSingle("SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING = " + "'" + cbLocation.getSelectedItem().toString() + "'");
                int area = Integer.parseInt(Area);
                if (rbAdmin.isSelected()) {
                    admin = "J";
                } else {
                    admin = "N";
                }
                idb.insert("INSERT INTO AGENT VALUES ('" + autoId + "','" + name + "','" + telephone + "','" + anstdatum + "','" + admin + "','" + password + "','" + area + "')");
                if (RBOffMngr.isSelected()) {
                    idb.update("UPDATE KONTORSCHEF SET AGENT_ID = " + "'" + autoId + "'");
                }
                if (rbFieldagent.isSelected()) {
                    idb.insert("INSERT INTO FALTAGENT VALUES ('" + autoId + "')");
                }
              
                if (Loc.contains(LocMn)) {
                String LocationMn = idb.fetchSingle("SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING =" + "'" + LocMn + "'");  
                       int locationMn = Integer.parseInt(LocationMn);
                       idb.delete("DELETE FROM OMRADESCHEF WHERE OMRADE = (SELECT OMRADES_ID FROM OMRADE WHERE BENAMNING = '" + LocMn + "')");
                       idb.insert("INSERT INTO OMRADESCHEF VALUES ('" + autoId + "','" + locationMn + "')"); 
                }
 
                JOptionPane.showMessageDialog(null, "Registrering av ny Agent lyckades!");
                emptyInputs();
            } catch (InfException | NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ett fel inträffade!" + e);
            }
        }
    }//GEN-LAST:event_buttonRegisterNewAgentActionPerformed

    private void RBOffMngrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBOffMngrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RBOffMngrActionPerformed

    private void emptyInputs() {

        txtPassword.setText("");
        textFieldName.setText("");
        datePicker2.setText("");
        txtPhone.setText("");
        cbLocation.setSelectedIndex(-1);
        cbLocationMngr.setSelectedIndex(-1);
        rbAdmin.setSelected(false);
        RBOffMngr.setSelected(false);
        rbFieldagent.setSelected(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton RBOffMngr;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton buttonRegisterNewAgent;
    private javax.swing.JComboBox<String> cbLocation;
    private javax.swing.JComboBox<String> cbLocationMngr;
    private com.github.lgooddatepicker.components.DatePicker datePicker2;
    private javax.swing.JLabel imageAgent;
    private javax.swing.JLabel labelAgent;
    private javax.swing.JLabel labelArea;
    private javax.swing.JLabel labelNewPassword;
    private javax.swing.JLabel labelPhone;
    private javax.swing.JLabel labelRegistration;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPanel panelAgent;
    private javax.swing.JRadioButton rbAdmin;
    private javax.swing.JRadioButton rbFieldagent;
    private javax.swing.JTextField textFieldName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
