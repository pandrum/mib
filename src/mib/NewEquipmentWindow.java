/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib;

import javax.swing.JOptionPane;
import oru.inf.*;

/**
 *
 * @author HH
 */
public class NewEquipmentWindow extends javax.swing.JFrame {

    private static InfDB idb;

    /**
     * Creates new form PasswordWindow
     */
    public NewEquipmentWindow(InfDB idb) {
        initComponents();
        this.idb = idb;
        // Dölj textruta och titel
        txtTypeInfo.setVisible(false);
        labelTypeInfo.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelEquipment = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        imageToolbox = new javax.swing.JLabel();
        labelType = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox<>();
        labelTypeInfo = new javax.swing.JLabel();
        txtTypeInfo = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelEquipment.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labelName.setText("Namn");

        btnRegister.setText("Registrera");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        imageToolbox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mib/toolbox.png"))); // NOI18N

        labelType.setText("Typ");

        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vapen", "Kommunikation", "Teknik" }));
        cbType.setSelectedIndex(-1);
        cbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEquipmentLayout = new javax.swing.GroupLayout(panelEquipment);
        panelEquipment.setLayout(panelEquipmentLayout);
        panelEquipmentLayout.setHorizontalGroup(
            panelEquipmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEquipmentLayout.createSequentialGroup()
                .addGroup(panelEquipmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelEquipmentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelEquipmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbType, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEquipmentLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(panelEquipmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelType)
                                    .addGroup(panelEquipmentLayout.createSequentialGroup()
                                        .addComponent(labelName)
                                        .addGap(74, 74, 74)
                                        .addComponent(imageToolbox))
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtTypeInfo)
                            .addGroup(panelEquipmentLayout.createSequentialGroup()
                                .addComponent(labelTypeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        panelEquipmentLayout.setVerticalGroup(
            panelEquipmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEquipmentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEquipmentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelName)
                    .addComponent(imageToolbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(labelType)
                .addGap(1, 1, 1)
                .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTypeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTypeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        txtName.getAccessibleContext().setAccessibleName("");

        btnBack.setText("Tillbaka");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emptyInputs() {
        // Metoden tömmer alla textfält, resetar comboboxar samt radioknappar och döljer vissa comboboxar och titlar
        // Tömmer textfält
        txtName.setText("");
        txtTypeInfo.setText("");
        // Reset comboboxar
        cbType.setSelectedIndex(-1);
        // Dölj textruta
        txtTypeInfo.setVisible(false);
    }

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // Metoden stänger fönstret när man klickar på tillbaka knappen
        setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        // Metoden registrerar en ny agent
        // Kollar så att namn och att comboboxar är ifyllda
        if (Validation.isNotEmpty(txtName) && Validation.ifCBEmpty(cbType)) {

            // Hämtar in alla nödvändiga textfält från användaren.
            String name = txtName.getText();
            String eqinfo = txtTypeInfo.getText();
            String type = cbType.getSelectedItem().toString();

            try {
                //Skapar ett nytt Utrustnings_ID att föra in i databasen.
                String autoId = idb.getAutoIncrement("UTRUSTNING", "UTRUSTNINGS_ID");
                int equipmentID = Integer.parseInt(autoId);
                
                // Lägger till en ny utrustning i tabellen utrustning 
                idb.insert("INSERT INTO UTRUSTNING VALUES ('" + equipmentID + "','" + name + "')");
                
                //Sätter typ baserat på de användaren valt i comboboxen
                if (type.equals("Vapen")) {
                    idb.insert("INSERT INTO VAPEN VALUES (" + equipmentID + ",'" + eqinfo + "')");
                } else if (type.equals("Kommunikation")) {
                    idb.insert("INSERT INTO KOMMUNIKATION VALUES (" + equipmentID + ",'" + eqinfo + "')");
                } else if (type.equals("Teknik")) {
                    idb.insert("INSERT INTO TEKNIK VALUES (" + equipmentID + ",'" + eqinfo + "')");
                }
                // Meddelande att utrustningen har registrerats 
                JOptionPane.showMessageDialog(null, "Registrering av ny utrustning lyckades!");

            } catch (InfException | NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ett fel inträffade!");
            }
            // Tömmer alla fälten
            emptyInputs();
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void cbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeActionPerformed
        // Metoden visar en till textruta beroende på vilket val man gör
        try {
            // Hämtar valet gjort i comboboxen och spara det i en sträng
            String choice = cbType.getSelectedItem().toString();
            // Om man valt Vapen i comboboxen
            if (choice.equals("Vapen")) {
                // Sätts den nya textrutan och titeln till att det skall visas
                txtTypeInfo.setVisible(true);
                labelTypeInfo.setVisible(true);
                // Titeln sätts till den överstämmande information till typen
                labelTypeInfo.setText("Kaliber");
                txtTypeInfo.setText("");
            } 
            // Om man valt Kommunikation i comboboxen
            else if (choice.equals("Kommunikation")) {
                // Sätts den nya textrutan och titeln till att det skall visas
                txtTypeInfo.setVisible(true);
                labelTypeInfo.setVisible(true);
                // Titeln sätts till den överstämmande information till typen
                labelTypeInfo.setText("Typ av överföringsteknik");
                txtTypeInfo.setText("");
            } 
            // Om man valt Teknik i comboboxen
            else if (choice.equals("Teknik")) {
                // Sätts den nya textrutan och titeln till att det skall visas
                txtTypeInfo.setVisible(true);
                labelTypeInfo.setVisible(true);
                // Titeln sätts till den överstämmande information till typen
                labelTypeInfo.setText("Typ av kraftkälla");
                txtTypeInfo.setText("");
            }
        } catch (NullPointerException e) {

        }
    }//GEN-LAST:event_cbTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentPasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentPasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentPasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentPasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRegister;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JLabel imageToolbox;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelType;
    private javax.swing.JLabel labelTypeInfo;
    private javax.swing.JPanel panelEquipment;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtTypeInfo;
    // End of variables declaration//GEN-END:variables
}
