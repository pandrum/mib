/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib;

import javax.swing.JOptionPane;
import oru.inf.*;

/**
 *
 * @author sbf
 */
public class PasswordWindow extends javax.swing.JFrame {

    private static InfDB idb;

    /**
     * Creates new form PasswordWindow
     */
    public PasswordWindow(InfDB idb) {
        initComponents();
        this.idb = idb;
        textFieldUsername.setText(MainWindow.getId());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldUsername = new javax.swing.JTextField();
        textFieldCurrentPassword = new javax.swing.JPasswordField();
        textFieldNewPassword = new javax.swing.JPasswordField();
        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        labelNewPassword = new javax.swing.JLabel();
        imagePadlock = new javax.swing.JLabel();
        buttonChangePassword = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        textFieldUsername.setEditable(false);

        labelUsername.setText("Ange användarnamn");

        labelPassword.setText("Ange nuvarande lösenord");

        labelNewPassword.setText("Ange nytt lösenord");

        imagePadlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mib/lock.png"))); // NOI18N

        buttonChangePassword.setText("Ändra");
        buttonChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonChangePasswordActionPerformed(evt);
            }
        });

        buttonBack.setText("Tillbaka");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(labelNewPassword))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(imagePadlock))
                    .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldCurrentPassword)
                    .addComponent(textFieldUsername)
                    .addComponent(textFieldNewPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelUsername)
                    .addComponent(buttonChangePassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(118, 118, 118))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(buttonBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(imagePadlock, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldCurrentPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelNewPassword)
                .addGap(4, 4, 4)
                .addComponent(textFieldNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonChangePassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(buttonBack)
                .addGap(16, 16, 16))
        );

        textFieldUsername.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonChangePasswordActionPerformed
        if (Validation.isNotEmpty(textFieldUsername) && Validation.isNotEmpty(textFieldCurrentPassword) && Validation.isNotEmpty(textFieldNewPassword)) {

            //Hämtar användarnamn och lösenord som användare matar in.
            String userNameInut = textFieldUsername.getText();
            String currentPasswordInput = textFieldCurrentPassword.getText();
            String newPassWordInput = textFieldNewPassword.getText();

            try {
                String username = idb.fetchSingle("SELECT AGENT_ID from AGENT where AGENT_ID = " + userNameInut);
                String password = idb.fetchSingle("SELECT LOSENORD from AGENT where AGENT_ID = " + userNameInut);

                // Om användare skriver in rätt användarnamn OCH rätt lösenord.
                if (userNameInut.equals(username) && currentPasswordInput.equals(password)) {
                    idb.update("UPDATE AGENT SET LOSENORD= " + "'" + newPassWordInput + "'" + "WHERE AGENT_ID= " + userNameInut);
                    JOptionPane.showMessageDialog(null, "Lösenordet har ändrats!");
                    setVisible(false);

                } else {
                    JOptionPane.showMessageDialog(null, "Fel lösenord eller användarnamn!");
                }
            } catch (InfException e) {
                JOptionPane.showMessageDialog(null, "Ett fel inträffade!" + System.lineSeparator() + e);
            }
        }
    }//GEN-LAST:event_buttonChangePasswordActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        setVisible(false);
    }//GEN-LAST:event_buttonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBack;
    private javax.swing.JButton buttonChangePassword;
    private javax.swing.JLabel imagePadlock;
    private javax.swing.JLabel labelNewPassword;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPasswordField textFieldCurrentPassword;
    private javax.swing.JPasswordField textFieldNewPassword;
    private javax.swing.JTextField textFieldUsername;
    // End of variables declaration//GEN-END:variables
}
